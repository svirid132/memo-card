{"version":3,"sources":["components/FieldGame/fetchData.js","components/Card/CardLoader.jsx","components/Card/Front.jsx","assets/card.jpg","components/Card/Back.jsx","components/Card/Card.jsx","components/FieldGame/fieldGameSlice.js","components/FieldGame/randomizer.js","components/Status/statusSlice.js","components/Authorization/authorizationSlice.js","app/store.js","components/Authorization/Authorization.jsx","container/SwitcherAuthorization.jsx","components/Finish.jsx","components/Description.jsx","components/Status/Status.jsx","assets/background.jpg","components/FieldGame/FieldGame.jsx","components/Game.jsx","container/SwitcherGame.jsx","App.js","index.js"],"names":["loadInfo","name","a","fetch","infoResponse","json","infoData","ok","Error","endSeparateIndex","originalimage","source","lastIndexOf","information","title","description","extract_html","originalImg","substr","width","height","ratio","imgResponse","imgData","imageData","query","pages","property","Number","isInteger","imageInfo","imageinfo","src","thumburl","thumbwidth","thumbheight","image","CardLoader","style","speed","backgroundColor","foregroundColor","borderRadius","x","y","rx","ry","IMG_POSITION","FRONT_STATE","Front","state","className","useState","isLoaded","setIsLoaded","isError","setIsError","hidden","view","imagePosition","Wrapper","delayHidden","replaceAll","zIndex","position","Img","vertical","horizontal","onLoad","onError","alt","styled","div","props","css","img","attrs","defaultProps","Wrraper","atl","Back","cardBackground","CARD_STATE","Card","onClick","viewBack","stateFront","viewCursor","e","BackStyled","FrontStyled","memo","cards","length","randIdArr","Array","idArr","i","push","numRange","selectIndex","Math","floor","random","selectNum","splice","randomaizer","data","names","map","cardId","gameId","id","FIELD_GAME_STATE","initialState","selectCards","descriptionOnCard","loadCardInfo","createAsyncThunk","fetchData","fieldGameSlice","createSlice","reducers","clickOnCard","action","payload","selectCard","forEach","card","Object","assign","turnOnFront","rest","isMatching","firstCard","secondCard","cardReset","clickOnBackCard","clickOnField","switchOnSelectState","extraReducers","builder","addCase","fulfilled","meta","arg","rejected","actions","fieldGame","selectState","selectDescription","users","currentUserId","scores","current","total","statusSlice","setUsers","userNames","index","score","switchUser","maxId","reduce","accam","user","max","plusScore","selectUsers","status","selectCurrentUserId","selectScores","AUTHORIZATION","authorization","authorizationSlice","setUser","newUsers","slice","removeUser","filter","error","nameSet","Set","size","countName","userName","count","selectAuthorization","store","configureStore","reducer","fieldGameReducer","statusReducer","authorizationReducer","useStyle","makeStyles","theme","root","display","minHeight","overflow","flexDirection","alignItems","wrapper","marginTop","spacing","marginBottom","btns","alignSelf","createTheme","palette","primary","main","text","secondary","active","typography","fontSize","Authorization","classes","useSelector","dispatch","useDispatch","userElems","Box","component","mt","listStyleType","TextField","value","onChange","target","variant","fullWidth","label","CssBaseline","ThemeProvider","Container","maxWidth","IconButton","userLength","handleRemove","handleAdd","Button","endIcon","SwitcherAuthorization","authorizationState","to","Finish","setTimeout","window","location","reload","Description","dangerouslySetInnerHTML","__html","StatusUser","currentUser","classNames","Status","clsx","backgroundImage","WrapperInternal","FieldGame","cardElems","stopPropagation","Game","fieldGameState","descriptionProps","viewDescription","useEffect","winnerUser","acca","SwitcherGame","App","path","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e1f89059.chunk.js","sourcesContent":["export async function loadInfo(name) {\r\n    try {\r\n        const infoResponse = await fetch(`https://ru.wikipedia.org/api/rest_v1/page/summary/${name}`);\r\n        const infoData = await infoResponse.json();\r\n        if (!infoResponse.ok) {\r\n            throw new Error(\"error load\");\r\n        }\r\n        const endSeparateIndex = infoData.originalimage.source.lastIndexOf(\"/\");\r\n        const information = ({name: infoData.title, description: infoData.extract_html});\r\n\r\n        const originalImg = {\r\n            name: infoData.originalimage.source.substr(endSeparateIndex + 1),\r\n            width: infoData.originalimage.width,\r\n            height: infoData.originalimage.height\r\n        }\r\n        const ratio = originalImg.width > originalImg.height ? \"width\" : \"height\"; \r\n        const imgResponse = \r\n            await fetch(`https://ru.wikipedia.org/w/api.php?origin=*&action=query&format=json&prop=imageinfo&titles=File:${originalImg.name}&iiprop=timestamp%7Cuser%7Curl&iiurl${ratio}=1280`);\r\n        const imgData = await imgResponse.json();\r\n        if (!imgResponse.ok) {\r\n            throw new Error(\"error load\");\r\n        }\r\n        let imageData = null;\r\n        for (const property in imgData.query.pages) {\r\n            if (Number.isInteger(Number(property))) {\r\n                const imageInfo = imgData.query.pages[property].imageinfo[0];\r\n                imageData = {\r\n                    src: imageInfo.thumburl,\r\n                    width: imageInfo.thumbwidth,\r\n                    height: imageInfo.thumbheight,\r\n                };\r\n                break;\r\n            }\r\n        }\r\n\r\n        return {\r\n            ...information,\r\n            image: imageData, \r\n        }\r\n\r\n    } catch (e) {\r\n        return e;\r\n    }   \r\n}","import React from \"react\"\r\nimport ContentLoader from \"react-content-loader\"\r\n\r\nconst CardLoader = ({style}) => {\r\n    return (\r\n    <ContentLoader \r\n      speed={2}\r\n      backgroundColor=\"rgb(77, 51, 50)\"\r\n      foregroundColor=\"#ecebeb\"\r\n      style={{width: \"100%\", height: \"100%\", borderRadius: \"10px\", ...style}}\r\n    >\r\n      <rect x=\"0\" y=\"0\" rx=\"10\" ry=\"10\" width=\"700\" height=\"500\" /> \r\n    </ContentLoader>\r\n)}\r\n\r\n  export default CardLoader","import styled, {css} from \"styled-components\"\r\nimport React, {useState} from 'react'\r\nimport CardLoader from './CardLoader'\r\n\r\nconst IMG_POSITION = {\r\n    VERTICAL: \"VERTICAL\",\r\n    HORIZONTAL: \"HORIZONTAL\",\r\n}\r\n\r\nexport const FRONT_STATE = {\r\n    VIEW: \"VIEW\",\r\n    UNVIEW: \"UNVIEW\",\r\n    HIDDEN: \"HIDDEN\",\r\n}\r\n\r\nfunction Front({image, name, state, className}) {\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n    const [isError, setIsError] = useState(image ? false : true);\r\n\r\n    let hidden = false;\r\n    let view = false;\r\n    switch(state) {\r\n        case FRONT_STATE.VIEW: {\r\n            view = true;\r\n            break;\r\n        }\r\n        case FRONT_STATE.HIDDEN: {\r\n            view = true;\r\n            hidden = true;\r\n            break;\r\n        }\r\n        default: {}\r\n    }\r\n\r\n    let imagePosition = null;\r\n    if (image) {\r\n        imagePosition = image.width > image.height ? IMG_POSITION.VERTICAL : IMG_POSITION.HORIZONTAL;\r\n    }\r\n\r\n    return (\r\n        <div className = {className}>\r\n            <Wrapper\r\n                view = {view}\r\n                delayHidden = {hidden}\r\n            >\r\n                {isError && !image && <Error name= {name.replaceAll('_', ' ')}/>}\r\n                { !isLoaded && !isError && image && <CardLoader style={{zIndex: 1, position: \"absolute\"}}/> }\r\n                { image &&\r\n                    <Img \r\n                    src = {image.src}\r\n                    vertical = {imagePosition === IMG_POSITION.VERTICAL}\r\n                    horizontal = {imagePosition ===  IMG_POSITION.HORIZONTAL}\r\n                    onLoad = {() => setIsLoaded(true)} \r\n                    onError={() => setIsError(true)}\r\n                    alt={name}\r\n                />}\r\n            </Wrapper>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n    transform: perspective(1200px) rotateY(180deg);\r\n    width: 20rem;\r\n    height: 30rem;\r\n    backface-visibility: hidden;\r\n    transition: transform 0.5s linear, opacity 1s 1s;\r\n    opacity: 1;\r\n    position: relative;\r\n\r\n    ${props => props.view && css`transform: perspective(1200px) rotateY(0deg);`}\r\n    ${props => (props.delayHidden && css`\r\n        opacity: 0;\r\n    `)}\r\n`\r\nconst Error = styled( ({name, className}) => (\r\n    <div className = {className}>\r\n        <h2>{name}</h2>\r\n        <p>Картинка не загрузилась</p>\r\n    </div>\r\n))`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: 20rem;\r\n    height: 30rem;\r\n    text-align: center;\r\n    color: white;\r\n    background-color: gray;\r\n    border-radius: 10px;\r\n    & h2 {\r\n        font-size: 3rem;\r\n    }\r\n    & p {\r\n        margin-top: 3rem;\r\n        font-size: 2rem;\r\n        width: 15rem;\r\n    }\r\n`;\r\n\r\nconst Img = styled.img.attrs((props => ({\r\n    alt: props.alt,\r\n    onLoad: props.onLoad,\r\n    onError: props.onError,\r\n})))`\r\n    z-index: 10;\r\n    border-radius: 10px;\r\n    ${props => (props.vertical && css`\r\n        width: 30rem;\r\n        height: 20rem;\r\n        object-fit: cover;\r\n        transform: rotate(-90deg);\r\n        transform-origin: 50% 75%;\r\n    `)}\r\n    ${props => (props.horizontal && css`\r\n        width: 20rem;\r\n        height: 30rem;\r\n        object-fit: cover;\r\n    `)}\r\n` \r\n\r\nFront.defaultProps = {\r\n    name: \"???\",\r\n}\r\n\r\nexport default Front;\r\n","export default __webpack_public_path__ + \"static/media/card.0a100dc1.jpg\";","import styled, {css} from 'styled-components'\r\nimport React from 'react'\r\nimport cardBackground from \"../../assets/card.jpg\"\r\n\r\nfunction Back({view, className}) {\r\n    return (\r\n        <div className = {className}>\r\n            <Wrraper view = {view}>\r\n                <Img src={cardBackground} alt=\"cardBackground\" />\r\n            </Wrraper>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Wrraper = styled.div`\r\n    backface-visibility: hidden;\r\n    transform: perspective(1200px) rotateY(-180deg);\r\n    transition: transform 0.5s linear;\r\n    ${props => (props.view && css`\r\n        transform: perspective(1200px) rotateY(0deg);\r\n    `)};\r\n`\r\n\r\nconst Img = styled.img.attrs(({src, alt}) => ({\r\n    src: src,\r\n    atl: alt,\r\n}))`\r\n    width: 20rem;   \r\n    height: 30rem;\r\n    border-radius: 10px;\r\n`;\r\n\r\nexport default Back\r\n","import {memo} from 'react'\r\nimport Front, {FRONT_STATE} from \"./Front\";\r\nimport Back from './Back';\r\nimport styled from 'styled-components'\r\n\r\nexport const CARD_STATE = {\r\n    FRONT: \"FRONT\",\r\n    BACK: \"BACK\",\r\n    HIDDEN: \"HIDDEN\",\r\n}\r\n\r\nconst Card = ({image, name, onClick, state}) => {\r\n\r\n    let viewBack = null;\r\n    let stateFront = null; \r\n    let viewCursor = true;\r\n    switch (state) {\r\n        case CARD_STATE.FRONT: {\r\n            viewBack = false;\r\n            stateFront = FRONT_STATE.VIEW;\r\n            break;\r\n        }\r\n        case CARD_STATE.BACK: {\r\n            viewBack = true;\r\n            stateFront = FRONT_STATE.UNVIEW;\r\n            break;\r\n        }\r\n        case CARD_STATE.HIDDEN: {\r\n            viewBack = false;\r\n            stateFront = FRONT_STATE.HIDDEN;\r\n            viewCursor = false\r\n            break;\r\n        }\r\n        default: {}\r\n    }\r\n\r\n    return (\r\n    <div>\r\n        <Wrapper viewCursor = {viewCursor} onClick = {(e) => onClick(e)}>\r\n            <BackStyled view = {viewBack}/>\r\n            <FrontStyled image = {image} name={name} state = {stateFront}/>\r\n        </Wrapper>\r\n    </div>\r\n    )\r\n};\r\n\r\nconst BackStyled = styled(Back)`\r\n    position: absolute;\r\n`\r\n\r\nconst FrontStyled = styled(Front)`\r\n    position: absolute;\r\n`\r\n\r\nconst Wrapper = styled.div`\r\n    cursor: ${props => props.viewCursor ? \"pointer\": \"default\"};\r\n    position: relative;\r\n    margin-top: 2rem; \r\n    margin-bottom: 2rem;\r\n    margin-right: 1rem;\r\n    margin-left: 1rem;\r\n    width: 20rem;   \r\n    height: 30rem;\r\n    -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\r\n`\r\n\r\nexport default memo(Card);\r\n","import {createAsyncThunk, createSlice} from '@reduxjs/toolkit';\r\nimport data from './../../assets/data.json'\r\nimport randomaizer from './randomizer';\r\nimport {loadInfo as fetchData} from './fetchData';\r\nimport { CARD_STATE } from '../Card/Card';\r\n\r\nconst randNumArr = randomaizer(data.names.length * 2);\r\n// const randNumArr = new Array(50).fill(null).map((item, index) => index % 2 ?  Math.floor(index / 2) + 26: Math.floor(index / 2) + 1);\r\nconst cards = randNumArr.map((cardId) => {\r\n    let gameId = cardId;\r\n    if (gameId > data.names.length) gameId -= data.names.length;\r\n    return {\r\n        id: cardId,\r\n        name: data.names[gameId - 1],\r\n        state: CARD_STATE.BACK,\r\n    }\r\n});\r\n\r\nexport const FIELD_GAME_STATE = {\r\n    DESCRIPTION: \"DESCRIPTION\",\r\n    SELECT_CARD: \"SELECT_CARD\",\r\n    MATCHING: \"MATHCHING\",\r\n    RESET: \"RESET\", \r\n}\r\n\r\nconst initialState = {\r\n    selectCards: [],\r\n    descriptionOnCard: null,//id\r\n    cards: cards,\r\n    state: FIELD_GAME_STATE.SELECT_CARD,\r\n} \r\n\r\nconst loadCardInfo = createAsyncThunk(\r\n    'fieldGame/fetchData',\r\n    async ({name}) => {\r\n        const data = await fetchData(name);\r\n        return data;\r\n    }\r\n);\r\n\r\nexport const loadCardInfos = () => (dispatch) => {\r\n    data.names.forEach((name, index) => {\r\n        dispatch(loadCardInfo({id: index + 1, name })); \r\n    });\r\n}\r\n\r\nexport const fieldGameSlice = createSlice({\r\n    name: 'fieldGame',\r\n    initialState, \r\n    reducers: {\r\n        clickOnCard: (state, action) => {\r\n            const id = action.payload;\r\n            let selectCard = null;\r\n            state.cards.forEach((card) => {\r\n                if (card.id === id) {\r\n                    selectCard = Object.assign({}, card);\r\n                }\r\n            });\r\n\r\n            switch(selectCard.state) {\r\n                case CARD_STATE.HIDDEN: {\r\n                    return;\r\n                }\r\n                case CARD_STATE.BACK: {\r\n                    clickOnBackCard(state, selectCard);\r\n                    return;\r\n                }\r\n                case CARD_STATE.FRONT: {\r\n                    state.state = FIELD_GAME_STATE.DESCRIPTION;\r\n                    state.descriptionOnCard = id;\r\n                    return;\r\n                }\r\n                default: {}\r\n            }\r\n\r\n        },\r\n        clickOnField: (state) => {\r\n            if (state.selectCards.length === 2) {\r\n                cardReset(state);\r\n            }\r\n        },\r\n        switchOnSelectState: (state) => {\r\n            state.state = FIELD_GAME_STATE.SELECT_CARD;\r\n        }\r\n    },\r\n    extraReducers: (builder) => {\r\n        builder\r\n            .addCase(loadCardInfo.fulfilled, (state, action) => {\r\n                const id = action.meta.arg.id;\r\n                state.cards = state.cards.map((card) => {\r\n                    const rest = state.cards.length / 2;\r\n                    if (card.id % rest === id) {\r\n                        const newCard = {\r\n                            ...card,\r\n                            ...action.payload,\r\n                        };\r\n                        return newCard;\r\n                    }\r\n                    return card;\r\n                });\r\n            })\r\n            .addCase(loadCardInfo.rejected, (state, action) => {\r\n            })\r\n    }\r\n});\r\n\r\nfunction clickOnBackCard(state, selectCard) {\r\n    switch(state.selectCards.length) {\r\n        case 0: {\r\n            turnOnFront(state, selectCard);\r\n            break;\r\n        }\r\n        case 1: {\r\n            const rest = state.cards.length / 2;\r\n            let isMatching = false;\r\n            const firstCard = state.selectCards[0]; \r\n            cards.forEach((secondCard) => {\r\n                if (secondCard.id === firstCard.id) return;\r\n                if (selectCard.id % rest === firstCard.id % rest) {\r\n                    isMatching = true;\r\n                }\r\n            });\r\n            if (isMatching) {\r\n                state.cards = state.cards.map((card) => {\r\n                    if (card.id % rest === firstCard.id % rest) {\r\n                        return ({\r\n                            ...card,\r\n                            state: CARD_STATE.HIDDEN,\r\n                        })\r\n                    }\r\n                    return card;\r\n                });\r\n                state.selectCards = [];\r\n                state.state = FIELD_GAME_STATE.MATCHING;\r\n            } else {\r\n                turnOnFront(state, selectCard);\r\n            }\r\n            break;\r\n        }\r\n        case 2: {\r\n            cardReset(state);\r\n            break;\r\n        }\r\n        default: {}\r\n    }\r\n}\r\n\r\nfunction cardReset (state) {\r\n    state.cards = state.cards.map((card) => {\r\n        if (card.state === CARD_STATE.FRONT) {\r\n            return ({\r\n                ...card,\r\n                state: CARD_STATE.BACK,\r\n            })\r\n        }\r\n        return card;\r\n    });\r\n    state.selectCards = [];\r\n    state.state = FIELD_GAME_STATE.RESET;\r\n}\r\n\r\nfunction turnOnFront(state, selectCard) {\r\n    state.cards = state.cards.map((card) => {\r\n        if (card.id === selectCard.id) {\r\n            return ({\r\n                ...selectCard,\r\n                state: CARD_STATE.FRONT,\r\n            });\r\n        } \r\n        return card;\r\n    });\r\n    state.selectCards.push({...selectCard, state: CARD_STATE.FRONT});\r\n    state.state = FIELD_GAME_STATE.SELECT_CARD;\r\n}\r\n\r\nexport const { clickOnCard, clickOnField, switchOnSelectState } = fieldGameSlice.actions;\r\n\r\nexport const selectCards = (state) => {\r\n    return state.fieldGame.cards;\r\n};\r\n\r\nexport const selectState = (state) => {\r\n    return state.fieldGame.state;\r\n}\r\n\r\nexport const selectDescription = (state) => {\r\n    const id = state.fieldGame.descriptionOnCard;\r\n    let description = null;\r\n    state.fieldGame.cards.forEach((card) => {\r\n        if (card.id === id) {\r\n            description = {\r\n                title: card.name,\r\n                description: card.description,\r\n                src: card.image?.src,\r\n            }\r\n        }\r\n    });\r\n    return description;\r\n}\r\n\r\nexport default fieldGameSlice.reducer;","//array randomaizer for game\r\nexport default function randomaizer(length) {\r\n    const randIdArr = new Array(length);\r\n    const idArr = [];\r\n    for (let i = 0; i < length; ++i) {\r\n        idArr.push(i + 1);\r\n    }\r\n    for (let i = 0; i < length; ++i) {\r\n        let numRange = length - i;\r\n        const selectIndex = Math.floor(numRange * Math.random());\r\n        const selectNum = idArr.splice(selectIndex, 1)[0];\r\n        randIdArr[i] = selectNum;\r\n    }\r\n\r\n    return randIdArr;//[4, 2, 5...] non zero\r\n}","import { createSlice } from '@reduxjs/toolkit';\r\nimport data from './../../assets/data.json'\r\n\r\nconst initialState = {\r\n    users: [],\r\n    currentUserId: 1,\r\n    scores: {\r\n        current: 0,\r\n        total: data.names.length,\r\n    },\r\n} \r\n\r\nexport const statusSlice = createSlice({\r\n    name: 'status',\r\n    initialState, \r\n    reducers: { \r\n        setUsers(state, action) {\r\n            const userNames = action.payload;\r\n            state.users = userNames.map((name, index) => {\r\n                return {\r\n                    id: index + 1,\r\n                    name,\r\n                    score: 0,\r\n                }\r\n            });\r\n        },\r\n        switchUser(state) {\r\n            const maxId = state.users.reduce((accam, user) => {\r\n                return Math.max(accam, user.id);\r\n            }, 0);\r\n            if (state.currentUserId > maxId) {\r\n                state.currentUserId = 1;\r\n                return;\r\n            }\r\n            ++state.currentUserId;\r\n        },\r\n        plusScore(state) {\r\n            state.users = state.users.map((user) => {\r\n                if (user.id === state.currentUserId) {\r\n                    return ({\r\n                        ...user,\r\n                        score: user.score + 1,\r\n                    });\r\n                }\r\n                return user;\r\n            });\r\n            ++state.scores.current; \r\n        }\r\n    }\r\n});\r\n\r\nexport const {setUsers, switchUser, plusScore} = statusSlice.actions;\r\n\r\nexport const selectUsers = (state) => {\r\n    return state.status.users;\r\n}\r\n\r\nexport const selectCurrentUserId = (state) => {\r\n    return state.status.currentUserId;\r\n}\r\n\r\nexport const selectScores = (state) => {\r\n    return state.status.scores;\r\n}\r\n\r\nexport default statusSlice.reducer;","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nexport const AUTHORIZATION = {\r\n    ERROR: \"ERROR\",\r\n    WRITTING: \"WRITTING\",\r\n    SUCCES: \"SUCCES\",\r\n}\r\n\r\nconst initialState = {\r\n    users: [\r\n        {\r\n            id: 1,\r\n            name: \"\",\r\n            isError: false, \r\n        }, \r\n        {\r\n            id: 2,\r\n            name: \"\",\r\n            isError: false,\r\n        }\r\n    ],\r\n    authorization: AUTHORIZATION.WRITTING,\r\n};\r\n\r\nexport const authorizationSlice =  createSlice({\r\n    name: \"authorization\",\r\n    initialState,\r\n    reducers: {\r\n        setUser(state, action) {\r\n            const {id, name} = action.payload;\r\n\r\n            //Добавляем нового пользователя\r\n            if (state.users.length < id) {\r\n                const newUsers = state.users.slice();\r\n                newUsers.push({\r\n                    id, \r\n                    name,\r\n                    isError: false,\r\n                });\r\n                state.users = newUsers;\r\n                return;\r\n            }\r\n\r\n            //Изменяем cтарого пользователя\r\n            state.users = state.users.map((user) => {\r\n                if (id === user.id) {\r\n                    return ({\r\n                        id, \r\n                        name,\r\n                        isError: false,\r\n                    });\r\n                }\r\n                return ({\r\n                    ...user,\r\n                    isError: false,\r\n                });\r\n            });\r\n\r\n            state.authorization = AUTHORIZATION.WRITTING;\r\n        },\r\n        removeUser(state, action) {\r\n            const id = action.payload;\r\n            state.users = state.users.filter((user) => user.id !== id);\r\n        },\r\n        authorization(state) {\r\n\r\n            //check empty\r\n            let error = false;\r\n            const newUsers = state.users.map((user) => {\r\n                if (user.name === \"\") {\r\n                    error = true;\r\n                    return ({\r\n                        ...user,\r\n                        isError: true,\r\n                    })\r\n                }\r\n                return user;\r\n            });\r\n            if(error) {\r\n                state.users = newUsers;\r\n                state.authorization = AUTHORIZATION.ERROR;\r\n                return;\r\n            }\r\n\r\n            //Check Duplicate\r\n            const names = state.users.map((user) => user.name);\r\n            const nameSet = new Set(names);\r\n            if (nameSet.size !== state.users.length) {\r\n                for (const userName of nameSet) {\r\n                    let countName = {\r\n                        userName,\r\n                        count: 0,\r\n                    };\r\n                    state.users.forEach((user) => {\r\n                        if (user.name === countName.userName) countName.count += 1;\r\n                    });\r\n                    if (countName.count > 1) {\r\n                        state.users = state.users.map((user) => {\r\n                            if (countName.userName === user.name) {\r\n                                return ({\r\n                                    ...user,\r\n                                    isError: true,\r\n                                });\r\n                            }\r\n                            return user;\r\n                        });\r\n                    }\r\n                }\r\n                state.authorization = AUTHORIZATION.ERROR;\r\n                return;\r\n            }\r\n\r\n            state.authorization = AUTHORIZATION.SUCCES;\r\n        }\r\n    }\r\n});\r\n\r\nexport const {setUser, removeUser, authorization} = authorizationSlice.actions;\r\n\r\nexport const selectUsers = (state) => state.authorization.users;\r\nexport const selectAuthorization = (state) => state.authorization.authorization;\r\n\r\nexport default authorizationSlice.reducer;","import { configureStore } from '@reduxjs/toolkit';\r\nimport fieldGameReducer from '../components/FieldGame/fieldGameSlice';\r\nimport statusReducer from '../components/Status/statusSlice';\r\nimport authorizationReducer from \"../components/Authorization/authorizationSlice\"\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    fieldGame: fieldGameReducer,\r\n    status: statusReducer,\r\n    authorization: authorizationReducer,\r\n  }\r\n});\r\n","import { Container, makeStyles, Box, TextField, CssBaseline, createTheme, ThemeProvider, Button\r\n} from '@material-ui/core'\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport RemoveIcon from '@material-ui/icons/Remove';\r\nimport SportsEsportsIcon from '@material-ui/icons/SportsEsports';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { authorization, removeUser, selectUsers, setUser } from './authorizationSlice';\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n    root: {\r\n        display: \"flex\",\r\n        width: \"100%\",\r\n        minHeight: \"100vh\",\r\n        height: \"100%\",\r\n        overflow: \"hidden\",\r\n        backgroundColor: \"orange\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n    },\r\n    wrapper: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n        marginTop: theme.spacing(8),\r\n        marginBottom: theme.spacing(8)\r\n    },\r\n    btns: {\r\n        alignSelf: \"flex-end\",\r\n    }\r\n}));\r\n\r\nconst theme = createTheme({\r\n    palette: {\r\n        primary: {\r\n            main: '#fff',\r\n        },\r\n        text: {\r\n            primary: \"#fff\",\r\n            secondary: \"#424242\",\r\n        },\r\n        action: {\r\n            active: \"#fff\",\r\n        }\r\n    },\r\n    typography: {\r\n        fontSize: 30,\r\n    },\r\n  });\r\n\r\n  //change over style\r\n  //https://stackblitz.com/edit/material-ui-custom-outline-color?file=ValidField.js\r\n\r\nfunction Authorization() {\r\n\r\n    const classes = useStyle();\r\n\r\n    const users = useSelector(selectUsers);\r\n    const dispatch = useDispatch();\r\n\r\n    const userElems = users.map((user, index) => {\r\n        return (\r\n            <Box key = {user.id} component = \"li\" mt={3} style={{listStyleType: \"none\"}}>\r\n                <TextField \r\n                    value = {user.name} \r\n                    error={ user.isError }\r\n                    onChange = {(e) => dispatch(setUser({...user, name: e.target.value}))} \r\n                    variant=\"outlined\" \r\n                    fullWidth \r\n                    label={`user ${index + 1}`} \r\n                />\r\n            </Box>);\r\n    });\r\n\r\n    const handleAdd = () => {\r\n        const userLength = users.length;\r\n        if (userLength === 4) return;\r\n        dispatch(setUser({id: userLength + 1, name: \"\"}));\r\n    }\r\n\r\n    const handleRemove = () => {\r\n        const userLength = users.length;\r\n        if (userLength === 2) return;\r\n        dispatch(removeUser(userLength));\r\n    }\r\n\r\n    const handlePlayGame = () => {\r\n        dispatch(authorization());\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CssBaseline />\r\n            <ThemeProvider theme={theme}>\r\n                <Container component = \"form\" className={classes.wrapper} maxWidth=\"xs\">\r\n                    <Box component = \"ul\" width=\"100%\">\r\n                        { userElems }\r\n                    </ Box>\r\n                        <Box className = {classes.btns} component=\"div\" mt={5}>\r\n                            <IconButton onClick={() => handleRemove()}><RemoveIcon /></IconButton>\r\n                            <IconButton onClick={() => handleAdd()}><AddIcon /></IconButton>\r\n                        </Box>\r\n                    <Box mt={4}>\r\n                        <Button onClick={() => handlePlayGame()} size=\"large\" variant=\"contained\" endIcon={<SportsEsportsIcon />}>Играть</Button>\r\n                    </Box>\r\n                </Container>\r\n            </ThemeProvider>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Authorization\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { useSelector } from 'react-redux'\r\nimport { Redirect } from 'react-router';\r\nimport Authorization from '../components/Authorization/Authorization'\r\nimport { AUTHORIZATION, selectAuthorization, selectUsers } from '../components/Authorization/authorizationSlice';\r\nimport { setUsers } from '../components/Status/statusSlice';\r\n\r\n\r\nfunction SwitcherAuthorization() {\r\n\r\n    const authorizationState = useSelector(selectAuthorization);\r\n    const users = useSelector(selectUsers);\r\n    const dispatch = useDispatch();\r\n\r\n    if (authorizationState === AUTHORIZATION.SUCCES) {\r\n        dispatch(setUsers(users.map((user) => user.name)));\r\n        return <Redirect to=\"/game\" />\r\n    }\r\n\r\n    return (\r\n        <Authorization />\r\n    )\r\n}\r\n\r\nexport default SwitcherAuthorization\r\n","import React from 'react'\r\n\r\nfunction Finish({user, score}) {\r\n    return (\r\n        <div className=\"finish\">\r\n            <div className=\"finish__other-wrapper\">\r\n                <div className=\"finish__inner-text\">\r\n                    <span className=\"finish__winner\">{user} выйграл!!!</span> \r\n                    <span className=\"finish__score\">со счетом {score}</span>\r\n                    <button onClick={() => setTimeout(() => window.location.reload(), 0)} className=\"finish__button\">Перейти в меню</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Finish\r\n","import React from 'react'\r\n\r\nconst Description =  ({src, title, description, onClick}) => {\r\n    return (\r\n        <div className=\"description\" style={{zIndex: 1000}}>\r\n            <div className=\"description__wrapper-outher\">\r\n                <div className=\"description__wrapper-internal\">\r\n                    <button className=\"description__button\" onClick={() => onClick()}>[x]</button>\r\n                            <div className=\"description__img\"><img src={src} alt={title} /></div>\r\n                            <h2 className=\"description__title\">{title}</h2>\r\n                            <span dangerouslySetInnerHTML={{__html: description}} className=\"description__description\"></span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n    )\r\n}\r\n\r\nexport default Description\r\n","import React from 'react'\r\nimport clsx from 'clsx'\r\nimport {useSelector} from \"react-redux\"\r\nimport {selectUsers, selectCurrentUserId, selectScores} from \"./statusSlice\"\r\nimport classNames from 'classnames'\r\n\r\nfunction Status() {\r\n\r\n    const users = useSelector(selectUsers);\r\n    const currentUserId = useSelector(selectCurrentUserId);\r\n    const scores = useSelector(selectScores);\r\n\r\n    const userElems = users.map((user, index) => {\r\n        return <StatusUser key={index} \r\n            name={user.name}  \r\n            score={user.score}  \r\n            currentUser = {user.id === currentUserId} \r\n        />\r\n    }); \r\n\r\n    return (\r\n        <div className={clsx(\"status\")}>\r\n            <div className=\"status__wrapper\">\r\n                <h2 className=\"status__title\">Статус игры</h2>\r\n                <ul className=\"status__status\">\r\n                    { userElems }\r\n                    <li className=\"status__left\">{scores.current} / {scores.total}</li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nfunction StatusUser({name, score, currentUser}) {\r\n    return (\r\n        <li className=\"status__user\">\r\n            <span className={classNames(\"status__name\", {\"status__name--current\": currentUser})}>{name}</span>\r\n            <span className={classNames(\"status__score\", {\"status__score--current\": currentUser})}>{score}</span>\r\n        </li>\r\n    );\r\n}\r\n\r\nexport default Status\r\n","export default __webpack_public_path__ + \"static/media/background.1142705e.jpg\";","import {Card} from \"../index\";\r\nimport {\r\n    selectCards,\r\n} from './fieldGameSlice';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport styled from \"styled-components\";\r\nimport backgroundImage from \"../../assets/background.jpg\";\r\nimport { clickOnCard, clickOnField } from \"./fieldGameSlice\";\r\n\r\nconst FieldGame = () => {\r\n\r\n    const cards = useSelector(selectCards);\r\n    const dispatch = useDispatch();\r\n\r\n    const cardElems = cards.map((card, index) => {\r\n        return (<Card\r\n            key = {card.id}\r\n            {...card}\r\n            name = {card.name}\r\n            onClick = {(e) => {\r\n                dispatch(clickOnCard(card.id));\r\n                e.stopPropagation();\r\n            }}\r\n        /> );\r\n    });\r\n\r\n    const handleClickField = (e) => {\r\n        dispatch(clickOnField());\r\n    }\r\n\r\n    return (\r\n        <div onClick={handleClickField}>\r\n            <Wrapper>\r\n                <WrapperInternal>\r\n                    { cardElems }\r\n                </WrapperInternal>\r\n            </Wrapper>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst Wrapper = styled.div`\r\n        overflow: hidden;\r\n        @media(min-width: 1024px) {// Включительно [] всегда\r\n            display: block;\r\n            background-image: url(${backgroundImage});\r\n            background-position: center center;\r\n            background-size: cover;\r\n            background-attachment: fixed;\r\n            height: 100%;\r\n        }\r\n`\r\nconst WrapperInternal = styled.div`\r\n    display: flex;\r\n        flex-wrap: wrap;\r\n        justify-content: space-around;\r\n\r\n        width: 100%;\r\n        max-width: 1024px;\r\n        margin: 0 auto;\r\n\r\n        background-color: orange;\r\n        padding-right: 3rem;\r\n\r\n        @media(min-width: 1024px) {\r\n            border-radius: 10px;\r\n            padding-right: 0rem;\r\n        } \r\n`\r\nexport default FieldGame\r\n","import React, { useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport Finish from './Finish';\r\nimport  Description from './Description';\r\nimport FieldGame from \"./FieldGame/FieldGame\";\r\nimport { FIELD_GAME_STATE, selectDescription, selectState, switchOnSelectState } from './FieldGame/fieldGameSlice';\r\nimport Status from \"./Status/Status\";\r\nimport { plusScore, selectScores, selectUsers, switchUser } from './Status/statusSlice';\r\n\r\nfunction Game() {\r\n\r\n    const dispatch = useDispatch();\r\n    const fieldGameState = useSelector(selectState);\r\n    const scores = useSelector(selectScores);\r\n    const users = useSelector(selectUsers);\r\n    const descriptionProps = useSelector(selectDescription);\r\n    const viewDescription = (fieldGameState === FIELD_GAME_STATE.DESCRIPTION) && descriptionProps?.description;\r\n\r\n    useEffect(() => {\r\n        switch(fieldGameState) {\r\n            case FIELD_GAME_STATE.MATCHING: {\r\n                dispatch(plusScore());\r\n                break;\r\n            }\r\n            case FIELD_GAME_STATE.RESET: {\r\n                dispatch(switchUser());\r\n                break;\r\n            }\r\n            default: {}\r\n        }\r\n    }, [fieldGameState, dispatch]);\r\n\r\n    if (scores.current === scores.total) {\r\n        const winnerUser = users.reduce((acca, user) => {\r\n            if (acca.score < user.score) {\r\n                return user;\r\n            }\r\n            return acca;\r\n        }, {id: 0, name: \"none\", score: 0});\r\n        return  <Finish user = {winnerUser.name} score = {winnerUser.score}/>;\r\n    }\r\n    return (\r\n        <div>\r\n            <FieldGame />\r\n            <Status />\r\n            {viewDescription && <Description {...descriptionProps} onClick={() => dispatch(switchOnSelectState())} />}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Game\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { Redirect } from 'react-router';\r\nimport { AUTHORIZATION, selectAuthorization } from '../components/Authorization/authorizationSlice';\r\nimport Game from '../components/Game';\r\n\r\nfunction SwitcherGame() {\r\n\r\n    const authorizationState = useSelector(selectAuthorization);\r\n\r\n    if (authorizationState !== AUTHORIZATION.SUCCES) {\r\n        return <Redirect to=\"/\" />\r\n    }\r\n\r\n    return (\r\n        <Game />\r\n    );\r\n}\r\n\r\nexport default SwitcherGame\r\n","import React from 'react';\r\nimport './layout/main.scss'\r\nimport { Switch, Route } from 'react-router-dom'\r\nimport SwitcherAuthorization from './container/SwitcherAuthorization';\r\nimport SwitcherGame from './container/SwitcherGame';\r\n\r\nfunction App() {\r\n  return (\r\n    <Switch>\r\n        <Route path=\"/\" component={SwitcherAuthorization} exact/>\r\n        <Route path=\"/game\" component={SwitcherGame} exact/>\r\n    </Switch> \r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { store } from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport {\r\n  BrowserRouter as Router,\r\n  HashRouter\r\n} from \"react-router-dom\";\r\nimport {loadCardInfos} from \"./components/FieldGame/fieldGameSlice\";\r\nimport \"./layout/main.scss\";\r\nimport App from './App';\r\n\r\nstore.dispatch(loadCardInfos());\r\n\r\nReactDOM.render(\r\n  <Router>\r\n    <HashRouter>\r\n      <Provider store={store}>\r\n        <App />\r\n      </Provider>\r\n    </HashRouter>\r\n  </Router>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}